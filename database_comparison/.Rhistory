# print(ncol(temp))
# Check that each formants file has the same number of frames are indicated in the time_intervals file
expect_equal(nrow(temp)+1, time_intervals[row,]$NumberFramesExtracted)
# print(nrow(temp)+1)
# print(time_intervals[row,]$NumberFramesExtracted)
}
for(row in 1:nrow(time_intervals)) {
# Let's recreate the file path and load the formants file into a dataframe
formants_file <- paste0('../../', time_intervals[row,]$Filepath, time_intervals[row,]$FormantsFile)
print(formants_file)
temp <- read_csv(formants_file, col_names=FALSE)
# Check that the each file has exactly six columns (F1-F3; see above)
expect_equal(ncol(temp), 6)
# print(ncol(temp))
# Check that each formants file has the same number of frames are indicated in the time_intervals file
expect_equal(nrow(temp)+1, time_intervals[row,]$NumberFramesExtracted)
# print(nrow(temp)+1)
# print(time_intervals[row,]$NumberFramesExtracted)
# Rename the columns
temp <- temp %>% rename(F1=X1, f2=X2, F3=X3, F1_bandwith=X4, F2_bandwith=X5, F3_bandwith=X6)
# Add the frame number and other metadata to each row
temp <- rowid_to_column(temp, "FrameNumber")
temp$Filepath <- formants_file
temp$Speaker <- time_intervals[row,]$Speaker
temp$Filename <- time_intervals[row,]$Filename
datalist[[row]] <- temp
}
datalist = list()
for(row in 1:nrow(time_intervals)) {
# Let's recreate the file path and load the formants file into a dataframe
formants_file <- paste0('../../', time_intervals[row,]$Filepath, time_intervals[row,]$FormantsFile)
print(formants_file)
temp <- read_csv(formants_file, col_names=FALSE)
# Check that the each file has exactly six columns (F1-F3; see above)
expect_equal(ncol(temp), 6)
# print(ncol(temp))
# Check that each formants file has the same number of frames are indicated in the time_intervals file
expect_equal(nrow(temp)+1, time_intervals[row,]$NumberFramesExtracted)
# print(nrow(temp)+1)
# print(time_intervals[row,]$NumberFramesExtracted)
# Rename the columns
temp <- temp %>% rename(F1=X1, f2=X2, F3=X3, F1_bandwith=X4, F2_bandwith=X5, F3_bandwith=X6)
# Add the frame number and other metadata to each row
temp <- rowid_to_column(temp, "FrameNumber")
temp$Filepath <- formants_file
temp$Speaker <- time_intervals[row,]$Speaker
temp$Filename <- time_intervals[row,]$Filename
datalist[[row]] <- temp
}
results <- bind_rows(datalist)
View(results)
time_intervals <- read_csv('../data/time_intervals2.csv')
time_intervals %>% head() %>% kable()
datalist = list()
for(row in 1:nrow(time_intervals)) {
# Let's recreate the file path and load the formants file into a dataframe
formants_file <- paste0('../../', time_intervals[row,]$Filepath, time_intervals[row,]$FormantsFile)
print(formants_file)
temp <- read_csv(formants_file, col_names=FALSE)
# Check that the each file has exactly six columns (F1-F3; see above)
expect_equal(ncol(temp), 6)
# print(ncol(temp))
# Check that each formants file has the same number of frames are indicated in the time_intervals file
expect_equal(nrow(temp)+1, time_intervals[row,]$NumberFramesExtracted)
# print(nrow(temp)+1)
# print(time_intervals[row,]$NumberFramesExtracted)
# Rename the columns
temp <- temp %>% rename(F1=X1, f2=X2, F3=X3, F1_bandwith=X4, F2_bandwith=X5, F3_bandwith=X6)
# Add the frame number and other metadata to each row
temp <- rowid_to_column(temp, "FrameNumber")
temp$Filepath <- formants_file
temp$Speaker <- time_intervals[row,]$Speaker
temp$Filename <- time_intervals[row,]$Filename
datalist[[row]] <- temp
}
results <- bind_rows(datalist)
View(results)
setwd("~/Github/inferring/database_comparison")
library(tidyverse)
library(knitr)
library(xtable)
phoible <- read_csv(url('https://github.com/phoible/dev/blob/master/data/phoible.csv?raw=true'), col_types=c(InventoryID='i', Marginal='l', .default='c'))
glottolog <- read_csv('https://cdstar.shh.mpg.de/bitstreams/EAEA0-D501-DBB8-65C4-0/languages_and_dialects_geo.csv')
head(glottolog)
merged <- left_join(phoible, glottolog, by=c("Glottocode"="glottocode"))
totals <- merged %>% select(InventoryID, Phoneme) %>% group_by(Phoneme) %>% summarize(count=n())
totals$phoible_freq <- totals$count / length(unique(phoible$InventoryID))
macros <- merged %>% select(InventoryID, macroarea, Phoneme, SegmentClass)
# There are some NAs
table(macros$macroarea, exclude = FALSE)
View(totals)
View(macros)
View(macros)
missing_areas <- macros %>% filter(is.na(macroarea)) %>% select(InventoryID) %>% distinct()
missing_langs <- phoible %>% filter(InventoryID %in% missing_areas$InventoryID)
missing_langs %>% select(InventoryID, Glottocode, LanguageName) %>% distinct() %>% kable()
macros <- macros %>% filter(!is.na(macroarea))
rownames(macros) <- NULL
africa <- macros %>% filter(macroarea=="Africa")
total <- length(unique(africa$InventoryID))
africa <- africa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
africa$freq <- africa$count / total
africa$macroarea <- 'Africa'
australia <- macros %>% filter(macroarea=="Australia")
total <- length(unique(australia$InventoryID))
australia <- australia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
australia$freq <- australia$count / total
australia$macroarea <- 'Australia'
eurasia <- macros %>% filter(macroarea=="Eurasia")
total <- length(unique(eurasia$InventoryID))
eurasia <- eurasia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
eurasia$freq <- eurasia$count / total
eurasia$macroarea <- 'Eurasia'
na <- macros %>% filter(macroarea=="North America")
total <- length(unique(na$InventoryID))
na <- na %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
na$freq <- na$count / total
na$macroarea <- 'North America'
papunesia <- macros %>% filter(macroarea=="Papunesia")
total <- length(unique(papunesia$InventoryID))
papunesia <- papunesia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
papunesia$freq <- papunesia$count / total
papunesia$macroarea <- 'Papunesia'
sa <- macros %>% filter(macroarea=="South America")
total <- length(unique(sa$InventoryID))
sa <- sa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
sa$freq <- sa$count / total
sa$macroarea <- 'South America'
library(tidyverse)
library(knitr)
library(xtable)
phoible <- read_csv(url('https://github.com/phoible/dev/blob/master/data/phoible.csv?raw=true'), col_types=c(InventoryID='i', Marginal='l', .default='c'))
glottolog <- read_csv('https://cdstar.shh.mpg.de/bitstreams/EAEA0-D501-DBB8-65C4-0/languages_and_dialects_geo.csv')
head(glottolog)
merged <- left_join(phoible, glottolog, by=c("Glottocode"="glottocode"))
totals <- merged %>% select(InventoryID, Phoneme) %>% group_by(Phoneme) %>% summarize(count=n())
totals$phoible_freq <- totals$count / length(unique(phoible$InventoryID))
View(totals)
macros <- merged %>% select(InventoryID, macroarea, Phoneme, SegmentClass)
# There are some NAs
table(macros$macroarea, exclude = FALSE)
missing_areas <- macros %>% filter(is.na(macroarea)) %>% select(InventoryID) %>% distinct()
missing_langs <- phoible %>% filter(InventoryID %in% missing_areas$InventoryID)
missing_langs %>% select(InventoryID, Glottocode, LanguageName) %>% distinct() %>% kable()
macros <- macros %>% filter(!is.na(macroarea))
rownames(macros) <- NULL
missing_areas <- macros %>% filter(is.na(macroarea)) %>% select(InventoryID) %>% distinct()
missing_langs <- phoible %>% filter(InventoryID %in% missing_areas$InventoryID)
missing_langs %>% select(InventoryID, Glottocode, LanguageName) %>% distinct() %>% kable()
table(macros$macroarea, exclude = FALSE)
macros <- merged %>% select(InventoryID, macroarea, Phoneme, SegmentClass)
table(macros$macroarea, exclude = FALSE)
missing_areas <- macros %>% filter(is.na(macroarea)) %>% select(InventoryID) %>% distinct()
missing_langs <- phoible %>% filter(InventoryID %in% missing_areas$InventoryID)
missing_langs %>% select(InventoryID, Glottocode, LanguageName) %>% distinct() %>% kable()
View(phoible)
missing_langs %>% select(InventoryID, Glottocode, ISO6393, LanguageName) %>% distinct() %>% kable()
phoible <- read_csv(url('https://raw.githubusercontent.com/phoible/dev/cf5122362b2b85e9724474dbddd67291a442b8fa/data/phoible.csv'), col_types=c(InventoryID='i', Marginal='l', .default='c'))
africa <- macros %>% filter(macroarea=="Africa")
total <- length(unique(africa$InventoryID))
africa <- africa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
africa$freq <- africa$count / total
africa$macroarea <- 'Africa'
australia <- macros %>% filter(macroarea=="Australia")
total <- length(unique(australia$InventoryID))
australia <- australia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
australia$freq <- australia$count / total
australia$macroarea <- 'Australia'
eurasia <- macros %>% filter(macroarea=="Eurasia")
total <- length(unique(eurasia$InventoryID))
eurasia <- eurasia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
eurasia$freq <- eurasia$count / total
eurasia$macroarea <- 'Eurasia'
na <- macros %>% filter(macroarea=="North America")
total <- length(unique(na$InventoryID))
na <- na %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
na$freq <- na$count / total
na$macroarea <- 'North America'
papunesia <- macros %>% filter(macroarea=="Papunesia")
total <- length(unique(papunesia$InventoryID))
papunesia <- papunesia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
papunesia$freq <- papunesia$count / total
papunesia$macroarea <- 'Papunesia'
sa <- macros %>% filter(macroarea=="South America")
total <- length(unique(sa$InventoryID))
sa <- sa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
sa$freq <- sa$count / total
sa$macroarea <- 'South America'
View(sa)
View(sa)
View(totals)
head(sa)
head(totals)
macros
phoible_no_africa <- macros %>% filter(macroarea!="Africa")
total <- length(unique(phoible_no_africa$InventoryID))
phoible_no_africa <- phoible_no_africa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_africa$freq <- phoible_no_africa$count / total
phoible_no_africa
phoible_no_africa <- macros %>% filter(macroarea!="Africa")
total <- length(unique(phoible_no_africa$InventoryID))
phoible_no_africa <- phoible_no_africa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_africa$freq <- phoible_no_africa$count / total
# phoible_no_africa$macroarea <- 'Africa'
phoible_no_australia <- macros %>% filter(macroarea!="Australia")
total <- length(unique(phoible_no_australia$InventoryID))
phoible_no_australia <- phoible_no_australia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_australia$freq <- phoible_no_australia$count / total
# australia$macroarea <- 'Australia'
phoible_no_eurasia <- macros %>% filter(macroarea!="Eurasia")
total <- length(unique(phoible_no_eurasia$InventoryID))
phoible_no_eurasia <- phoible_no_eurasia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_eurasia$freq <- phoible_no_eurasia$count / total
# eurasia$macroarea <- 'Eurasia'
phoible_no_na <- macros %>% filter(macroarea!="North America")
total <- length(unique(phoible_no_na$InventoryID))
phoible_no_na <- phoible_no_na %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_$freq <- phoible_no_$count / total
phoible_no_na <- macros %>% filter(macroarea!="North America")
total <- length(unique(phoible_no_na$InventoryID))
phoible_no_na <- phoible_no_na %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_na$freq <- phoible_no_na$count / total
africa <- africa %>% select(macroarea, Phoneme, SegmentClass, freq)
australia <- australia %>% select(macroarea, Phoneme, SegmentClass, freq)
eurasia <- eurasia %>% select(macroarea, Phoneme, SegmentClass, freq)
papunesia <- papunesia %>% select(macroarea, Phoneme, SegmentClass, freq)
na <- na %>% select(macroarea, Phoneme, SegmentClass, freq)
sa <- sa %>% select(macroarea, Phoneme, SegmentClass, freq)
all <- bind_rows(africa, australia, eurasia, papunesia, na, sa)
View(all)
totals <- totals %>% select(Phoneme, phoible_freq)
all <- left_join(all, totals, by=c("Phoneme"="Phoneme"))
all$delta <- all$freq-all$phoible_freq
phoible_no_africa <- phoible_no_africa %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_africa <- macros %>% filter(macroarea!="Africa")
total <- length(unique(phoible_no_africa$InventoryID))
phoible_no_africa <- phoible_no_africa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_africa$freq <- phoible_no_africa$count / total
phoible_no_africa$macroarea <- 'Africa'
phoible_no_australia <- macros %>% filter(macroarea!="Australia")
total <- length(unique(phoible_no_australia$InventoryID))
phoible_no_australia <- phoible_no_australia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_australia$freq <- phoible_no_australia$count / total
australia$macroarea <- 'Australia'
phoible_no_eurasia <- macros %>% filter(macroarea!="Eurasia")
total <- length(unique(phoible_no_eurasia$InventoryID))
phoible_no_eurasia <- phoible_no_eurasia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_eurasia$freq <- phoible_no_eurasia$count / total
eurasia$macroarea <- 'Eurasia'
phoible_no_na <- macros %>% filter(macroarea!="North America")
total <- length(unique(phoible_no_na$InventoryID))
phoible_no_na <- phoible_no_na %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_na$freq <- phoible_no_na$count / total
na$macroarea <- 'North America'
phoible_no_papunesia <- macros %>% filter(macroarea!="Papunesia")
total <- length(unique(phoible_no_papunesia$InventoryID))
phoible_no_papunesia <- phoible_no_papunesia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_papunesia$freq <- phoible_no_papunesia$count / total
papunesia$macroarea <- 'Papunesia'
phoible_no_sa <- macros %>% filter(macroarea!="South America")
total <- length(unique(phoible_no_sa$InventoryID))
phoible_no_sa <- phoible_no_sa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_sa$freq <- phoible_no_sa$count / total
sa$macroarea <- 'South America'
phoible_no_africa <- phoible_no_africa %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_australia <- phoible_no_australia %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_africa <- macros %>% filter(macroarea!="Africa")
total <- length(unique(phoible_no_africa$InventoryID))
phoible_no_africa <- phoible_no_africa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_africa$freq <- phoible_no_africa$count / total
phoible_no_africa$macroarea <- 'Africa'
phoible_no_australia <- macros %>% filter(macroarea!="Australia")
total <- length(unique(phoible_no_australia$InventoryID))
phoible_no_australia <- phoible_no_australia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_australia$freq <- phoible_no_australia$count / total
australia$macroarea <- 'Australia'
phoible_no_africa <- macros %>% filter(macroarea!="Africa")
total <- length(unique(phoible_no_africa$InventoryID))
phoible_no_africa <- phoible_no_africa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_africa$freq <- phoible_no_africa$count / total
phoible_no_africa$macroarea <- 'Africa'
phoible_no_australia <- macros %>% filter(macroarea!="Australia")
total <- length(unique(phoible_no_australia$InventoryID))
phoible_no_australia <- phoible_no_australia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_australia$freq <- phoible_no_australia$count / total
phoible_no_australia$macroarea <- 'Australia'
phoible_no_eurasia <- macros %>% filter(macroarea!="Eurasia")
total <- length(unique(phoible_no_eurasia$InventoryID))
phoible_no_eurasia <- phoible_no_eurasia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_eurasia$freq <- phoible_no_eurasia$count / total
phoible_no_eurasia$macroarea <- 'Eurasia'
phoible_no_na <- macros %>% filter(macroarea!="North America")
total <- length(unique(phoible_no_na$InventoryID))
phoible_no_na <- phoible_no_na %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_na$freq <- phoible_no_na$count / total
phoible_no_na$macroarea <- 'North America'
phoible_no_papunesia <- macros %>% filter(macroarea!="Papunesia")
total <- length(unique(phoible_no_papunesia$InventoryID))
phoible_no_papunesia <- phoible_no_papunesia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_papunesia$freq <- phoible_no_papunesia$count / total
phoible_no_papunesia$macroarea <- 'Papunesia'
phoible_no_sa <- macros %>% filter(macroarea!="South America")
total <- length(unique(phoible_no_sa$InventoryID))
phoible_no_sa <- phoible_no_sa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_sa$freq <- phoible_no_sa$count / total
phoible_no_sa$macroarea <- 'South America'
africa <- macros %>% filter(macroarea=="Africa")
total <- length(unique(africa$InventoryID))
africa <- africa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
africa$freq <- africa$count / total
africa$macroarea <- 'Africa'
australia <- macros %>% filter(macroarea=="Australia")
total <- length(unique(australia$InventoryID))
australia <- australia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
australia$freq <- australia$count / total
australia$macroarea <- 'Australia'
eurasia <- macros %>% filter(macroarea=="Eurasia")
total <- length(unique(eurasia$InventoryID))
eurasia <- eurasia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
eurasia$freq <- eurasia$count / total
eurasia$macroarea <- 'Eurasia'
na <- macros %>% filter(macroarea=="North America")
total <- length(unique(na$InventoryID))
na <- na %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
na$freq <- na$count / total
na$macroarea <- 'North America'
papunesia <- macros %>% filter(macroarea=="Papunesia")
total <- length(unique(papunesia$InventoryID))
papunesia <- papunesia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
papunesia$freq <- papunesia$count / total
papunesia$macroarea <- 'Papunesia'
sa <- macros %>% filter(macroarea=="South America")
total <- length(unique(sa$InventoryID))
sa <- sa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
sa$freq <- sa$count / total
sa$macroarea <- 'South America'
africa <- africa %>% select(macroarea, Phoneme, SegmentClass, freq)
australia <- australia %>% select(macroarea, Phoneme, SegmentClass, freq)
eurasia <- eurasia %>% select(macroarea, Phoneme, SegmentClass, freq)
papunesia <- papunesia %>% select(macroarea, Phoneme, SegmentClass, freq)
na <- na %>% select(macroarea, Phoneme, SegmentClass, freq)
sa <- sa %>% select(macroarea, Phoneme, SegmentClass, freq)
all <- bind_rows(africa, australia, eurasia, papunesia, na, sa)
phoible_no_africa <- phoible_no_africa %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_australia <- phoible_no_australia %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_eurasia <- phoible_no_eurasia %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_papunesia <- phoible_no_papunesia %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_na <- phoible_no_na %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_sa <- phoible_no_sa %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_all <- bind_rows(phoible_no_africa, phoible_no_australia, phoible_no_eurasia, phoible_no_papunesia, phoible_no_na, phoible_no_sa)
phoible_no_all
phoible_no_all %>% rename(freq_phoible_no_macroarea = freq)
totals
all
totals <- totals %>% select(Phoneme, phoible_freq)
all <- left_join(all, totals, by=c("Phoneme"="Phoneme"))
all
all <- left_join(all, phoible_no_all)
totals <- totals %>% select(Phoneme, phoible_freq)
all <- left_join(all, totals, by=c("Phoneme"="Phoneme"))
all
merged <- left_join(phoible, glottolog, by=c("Glottocode"="glottocode"))
totals <- merged %>% select(InventoryID, Phoneme) %>% group_by(Phoneme) %>% summarize(count=n())
totals$phoible_freq <- totals$count / length(unique(phoible$InventoryID))
macros <- merged %>% select(InventoryID, macroarea, Phoneme, SegmentClass)
table(macros$macroarea, exclude = FALSE)
missing_areas <- macros %>% filter(is.na(macroarea)) %>% select(InventoryID) %>% distinct()
missing_langs <- phoible %>% filter(InventoryID %in% missing_areas$InventoryID)
missing_langs %>% select(InventoryID, Glottocode, ISO6393, LanguageName) %>% distinct() %>% kable()
macros <- macros %>% filter(!is.na(macroarea))
rownames(macros) <- NULL
africa <- macros %>% filter(macroarea=="Africa")
total <- length(unique(africa$InventoryID))
africa <- africa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
africa$freq <- africa$count / total
africa$macroarea <- 'Africa'
australia <- macros %>% filter(macroarea=="Australia")
total <- length(unique(australia$InventoryID))
australia <- australia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
australia$freq <- australia$count / total
australia$macroarea <- 'Australia'
eurasia <- macros %>% filter(macroarea=="Eurasia")
total <- length(unique(eurasia$InventoryID))
eurasia <- eurasia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
eurasia$freq <- eurasia$count / total
eurasia$macroarea <- 'Eurasia'
na <- macros %>% filter(macroarea=="North America")
total <- length(unique(na$InventoryID))
na <- na %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
na$freq <- na$count / total
na$macroarea <- 'North America'
papunesia <- macros %>% filter(macroarea=="Papunesia")
total <- length(unique(papunesia$InventoryID))
papunesia <- papunesia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
papunesia$freq <- papunesia$count / total
papunesia$macroarea <- 'Papunesia'
sa <- macros %>% filter(macroarea=="South America")
total <- length(unique(sa$InventoryID))
sa <- sa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
sa$freq <- sa$count / total
sa$macroarea <- 'South America'
phoible_no_africa <- macros %>% filter(macroarea!="Africa")
total <- length(unique(phoible_no_africa$InventoryID))
phoible_no_africa <- phoible_no_africa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_africa$freq <- phoible_no_africa$count / total
phoible_no_africa$macroarea <- 'Africa'
phoible_no_australia <- macros %>% filter(macroarea!="Australia")
total <- length(unique(phoible_no_australia$InventoryID))
phoible_no_australia <- phoible_no_australia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_australia$freq <- phoible_no_australia$count / total
phoible_no_australia$macroarea <- 'Australia'
phoible_no_eurasia <- macros %>% filter(macroarea!="Eurasia")
total <- length(unique(phoible_no_eurasia$InventoryID))
phoible_no_eurasia <- phoible_no_eurasia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_eurasia$freq <- phoible_no_eurasia$count / total
phoible_no_eurasia$macroarea <- 'Eurasia'
phoible_no_na <- macros %>% filter(macroarea!="North America")
total <- length(unique(phoible_no_na$InventoryID))
phoible_no_na <- phoible_no_na %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_na$freq <- phoible_no_na$count / total
phoible_no_na$macroarea <- 'North America'
phoible_no_papunesia <- macros %>% filter(macroarea!="Papunesia")
total <- length(unique(phoible_no_papunesia$InventoryID))
phoible_no_papunesia <- phoible_no_papunesia %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_papunesia$freq <- phoible_no_papunesia$count / total
phoible_no_papunesia$macroarea <- 'Papunesia'
phoible_no_sa <- macros %>% filter(macroarea!="South America")
total <- length(unique(phoible_no_sa$InventoryID))
phoible_no_sa <- phoible_no_sa %>% group_by(Phoneme, SegmentClass) %>% summarize(count=n())
phoible_no_sa$freq <- phoible_no_sa$count / total
phoible_no_sa$macroarea <- 'South America'
africa <- africa %>% select(macroarea, Phoneme, SegmentClass, freq)
australia <- australia %>% select(macroarea, Phoneme, SegmentClass, freq)
eurasia <- eurasia %>% select(macroarea, Phoneme, SegmentClass, freq)
papunesia <- papunesia %>% select(macroarea, Phoneme, SegmentClass, freq)
na <- na %>% select(macroarea, Phoneme, SegmentClass, freq)
sa <- sa %>% select(macroarea, Phoneme, SegmentClass, freq)
all <- bind_rows(africa, australia, eurasia, papunesia, na, sa)
phoible_no_africa <- phoible_no_africa %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_australia <- phoible_no_australia %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_eurasia <- phoible_no_eurasia %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_papunesia <- phoible_no_papunesia %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_na <- phoible_no_na %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_sa <- phoible_no_sa %>% select(macroarea, Phoneme, SegmentClass, freq)
phoible_no_all <- bind_rows(phoible_no_africa, phoible_no_australia, phoible_no_eurasia, phoible_no_papunesia, phoible_no_na, phoible_no_sa)
phoible_no_all %>% rename(freq_phoible_no_macroarea = freq)
all
phoible_no_all <- phoible_no_all %>% rename(freq_phoible_no_macroarea = freq)
totals <- totals %>% select(Phoneme, phoible_freq)
all <- left_join(all, totals, by=c("Phoneme"="Phoneme"))
all <- left_join(all, phoible_no_all)
all
totals <- totals %>% select(Phoneme, phoible_freq)
all <- left_join(all, totals, by=c("Phoneme"="Phoneme"))
all$delta <- all$freq-all$phoible_freq
totals
africa <- africa %>% select(macroarea, Phoneme, SegmentClass, freq)
australia <- australia %>% select(macroarea, Phoneme, SegmentClass, freq)
eurasia <- eurasia %>% select(macroarea, Phoneme, SegmentClass, freq)
papunesia <- papunesia %>% select(macroarea, Phoneme, SegmentClass, freq)
na <- na %>% select(macroarea, Phoneme, SegmentClass, freq)
sa <- sa %>% select(macroarea, Phoneme, SegmentClass, freq)
all <- bind_rows(africa, australia, eurasia, papunesia, na, sa)
totals <- totals %>% select(Phoneme, phoible_freq)
all <- left_join(all, totals, by=c("Phoneme"="Phoneme"))
all$delta <- all$freq-all$phoible_freq
all
all2 <- left_join(all, phoible_no_all)
all2
macroarea_specific_segments <- all2 %>% filter(is.na(freq_phoible_no_macroarea))
macroarea_specific_segments
write_csv(macroarea_specific_segments, 'macroarea_specific_segments.csv')
all2 %>% filter('a̞')
all2 %>% filter(Phoneme == 'a̞')
all2 %>% filter(Phoneme == "˦˩")
all2
all2 <- all2 %>% mutate(freq_phoible_no_macroarea = replace_na(freq_phoible_no_macroarea, 0))
all2
all2$delta_no_macroarea <- all2$freq-all2$freq_phoible_no_macroarea
all2
all <- all2
all %>% group_by(macroarea) %>% slice_max(order_by = delta, n = 10) %>% kable()
voiced_obstruents <- c('b', 'd', 'ɡ', 'β', 'v', 'ð', 'z', 'ʒ', 'ɣ')
all %>% filter(macroarea == "South America") %>% filter(Phoneme %in% voiced_obstruents) %>% slice(match(voiced_obstruents, Phoneme)) %>% kable()
all %>% group_by(macroarea) %>% slice_max(order_by = delta, n = 10) %>% kable()
all <- left_join(all, phoible_no_all)
macroarea_specific_segments <- all %>% filter(is.na(freq_phoible_no_macroarea))
write_csv(macroarea_specific_segments, 'macroarea_specific_segments.csv')
all <- all %>% mutate(freq_phoible_no_macroarea = replace_na(freq_phoible_no_macroarea, 0))
all %>% group_by(macroarea) %>% slice_max(order_by = delta, n = 10) %>% kable()
voiced_obstruents <- c('b', 'd', 'ɡ', 'β', 'v', 'ð', 'z', 'ʒ', 'ɣ')
all %>% filter(macroarea == "South America") %>% filter(Phoneme %in% voiced_obstruents) %>% slice(match(voiced_obstruents, Phoneme)) %>% kable()
all %>% group_by(macroarea) %>% slice_min(order_by = delta, n = 10) %>% kable()
pos <- all %>% group_by(macroarea) %>% filter(SegmentClass=="consonant") %>% slice_max(order_by = delta, n = 10)
pos %>% kable()
neg <- all %>% group_by(macroarea) %>% filter(SegmentClass=="consonant") %>% slice_min(order_by = delta, n = 10)
neg %>% kable()
pos <- pos %>% select(macroarea, Phoneme, freq, phoible_freq, delta, freq_phoible_no_macroarea, delta_no_macroarea)
add.to.row <- list(pos = list(0), command = NULL)
command <- paste0("\\hline\n\\endhead\n",
"\\hline\n",
"\\multicolumn{", dim(df)[2] + 1, "}{l}",
"{\\footnotesize Continued on next page}\n",
"\\endfoot\n",
"\\endlastfoot\n")
add.to.row$command <- command
print(xtable(pos), hline.after=c(-1), add.to.row = add.to.row, tabular.environment = "longtable", include.rownames=FALSE)
neg <- neg %>% select(macroarea, Phoneme, freq, phoible_freq, delta, freq_phoible_no_macroarea, delta_no_macroarea)
print(xtable(neg), hline.after=c(-1), add.to.row = add.to.row, tabular.environment = "longtable", include.rownames=FALSE)
library(xtable)
print(xtable(all %>% group_by(macroarea) %>% slice_max(order_by = delta, n = 10)))
print(xtable(all %>% group_by(macroarea) %>% slice_min(order_by = delta, n = 10)))
